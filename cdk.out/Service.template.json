{
 "Resources": {
  "PedidosMsgLogGroupFBE38DBF": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "PedidosMsLog",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Service/PedidosMsgLogGroup/Resource"
   }
  },
  "AluraServiceLBAB719DC8": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AluraServiceLBSecurityGroup15174ABC",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCPublicSubnet1Subnet62E884E27A8AE815"
     },
     {
      "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCPublicSubnet2SubnetC3D74D29273A4942"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/LB/Resource"
   }
  },
  "AluraServiceLBSecurityGroup15174ABC": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB ServiceAluraServiceLB0235AACE",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 5555",
      "FromPort": 5555,
      "IpProtocol": "tcp",
      "ToPort": 5555
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCBD283083D685000B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/LB/SecurityGroup/Resource"
   }
  },
  "AluraServiceLBSecurityGrouptoServiceAluraServiceSecurityGroupA64D418C80809B639564": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "AluraServiceSecurityGroupC03E32BF",
      "GroupId"
     ]
    },
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "AluraServiceLBSecurityGroup15174ABC",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/LB/SecurityGroup/to ServiceAluraServiceSecurityGroupA64D418C:8080"
   }
  },
  "AluraServiceLBPublicListener31342720": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "AluraServiceLBPublicListenerECSGroup827267C7"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "AluraServiceLBAB719DC8"
    },
    "Port": 5555,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/LB/PublicListener/Resource"
   }
  },
  "AluraServiceLBPublicListenerECSGroup827267C7": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCBD283083D685000B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "AluraServiceTaskDefTaskRole0F12EEA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/TaskDef/TaskRole/Resource"
   }
  },
  "AluraServiceTaskDef524442F2": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "SPRING_DATASOURCE_URL",
        "Value": {
         "Fn::Join": [
          "",
          [
           "jdbc:mysql://",
           {
            "Fn::ImportValue": "pedidos-db-endpoint"
           },
           ":3306/alurafood-pedidos?createDatabaseIfNotExist=true"
          ]
         ]
        }
       },
       {
        "Name": "SPRING_DATASOURCE_PASSWORD",
        "Value": {
         "Fn::ImportValue": "pedidos-db-senha"
        }
       },
       {
        "Name": "SPRING_DATASOURCE_USERNAME",
        "Value": "admin"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::AccountId"
         },
         ".dkr.ecr.",
         {
          "Ref": "AWS::Region"
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/img-ms-pedidos:latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "PedidosMsgLogGroupFBE38DBF"
        },
        "awslogs-stream-prefix": "PedidosMS",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "app_ola",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "AluraServiceTaskDefExecutionRole2E02CA08",
      "Arn"
     ]
    },
    "Family": "ServiceAluraServiceTaskDef6DB20201",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "AluraServiceTaskDefTaskRole0F12EEA5",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/TaskDef/Resource"
   }
  },
  "AluraServiceTaskDefExecutionRole2E02CA08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/TaskDef/ExecutionRole/Resource"
   }
  },
  "AluraServiceTaskDefExecutionRoleDefaultPolicy30A8BA35": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/img-ms-pedidos"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PedidosMsgLogGroupFBE38DBF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AluraServiceTaskDefExecutionRoleDefaultPolicy30A8BA35",
    "Roles": [
     {
      "Ref": "AluraServiceTaskDefExecutionRole2E02CA08"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "AluraServiceD1536A49": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "Cluster:ExportsOutputRefAluraCluster5C1035CFFF1863E4"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 3,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "app_ola",
      "ContainerPort": 8080,
      "TargetGroupArn": {
       "Ref": "AluraServiceLBPublicListenerECSGroup827267C7"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "AluraServiceSecurityGroupC03E32BF",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCPublicSubnet1Subnet62E884E27A8AE815"
       },
       {
        "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCPublicSubnet2SubnetC3D74D29273A4942"
       }
      ]
     }
    },
    "ServiceName": "alura-service",
    "TaskDefinition": {
     "Ref": "AluraServiceTaskDef524442F2"
    }
   },
   "DependsOn": [
    "AluraServiceLBPublicListenerECSGroup827267C7",
    "AluraServiceLBPublicListener31342720",
    "AluraServiceTaskDefTaskRole0F12EEA5"
   ],
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/Service/Service"
   }
  },
  "AluraServiceSecurityGroupC03E32BF": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Service/AluraService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VPC:ExportsOutputRefAluraVPCBD283083D685000B"
    }
   },
   "DependsOn": [
    "AluraServiceTaskDefTaskRole0F12EEA5"
   ],
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/Service/SecurityGroup/Resource"
   }
  },
  "AluraServiceSecurityGroupfromServiceAluraServiceLBSecurityGroup7D2B156780803C46178F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "AluraServiceSecurityGroupC03E32BF",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AluraServiceLBSecurityGroup15174ABC",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "DependsOn": [
    "AluraServiceTaskDefTaskRole0F12EEA5"
   ],
   "Metadata": {
    "aws:cdk:path": "Service/AluraService/Service/SecurityGroup/from ServiceAluraServiceLBSecurityGroup7D2B1567:8080"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QXW/CMAz8LbyHDNCk7XXsS5smbWp5RyY1lUdIqthlqqr+96UpoO5DPPl8ufjOXuj59a2eTeCLp6bYTS1tdJsLmJ2K1LpFE3SGlWcSH5olMCrrS9btmy+fg68rdb91J9wpNLyuQASDY31XVZYMCPmogGIJFpzB4glCCYI5hgMZVGiBhYyNik1SkCsPC93+/zsMfqN+rCMWdEfNCY/eV9EZ5Rx71PbJo2eOpg4kzVlymXgsAzL/oV9c4tM1dHtcdwW8e8AtOeqTDPY/Ge8EKCYecb9OlYwS7BTBXreZt4lN9cPHPZu+HVDX9fi9lqoWlSH7Ogwzxji6FsmrU69wgKv5jZ7p+WzyyUTTUDuhPepsqN+RudkeLAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "Service/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AluraServiceLoadBalancerDNS2EC0D396": {
   "Value": {
    "Fn::GetAtt": [
     "AluraServiceLBAB719DC8",
     "DNSName"
    ]
   }
  },
  "AluraServiceServiceURL6A8B7491": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "AluraServiceLBAB719DC8",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}